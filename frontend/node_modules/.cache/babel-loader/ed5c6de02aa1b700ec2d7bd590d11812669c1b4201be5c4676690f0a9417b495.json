{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/Downloads/DS-Repo-Sphere/frontend/src/components/RepoSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchRepos } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepoSelector = ({\n  onSelectRepo\n}) => {\n  _s();\n  const [repos, setRepos] = useState([]);\n  useEffect(() => {\n    const loadRepos = async () => {\n      const repoList = await fetchRepos();\n      setRepos(repoList);\n    };\n    loadRepos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: e => onSelectRepo(e.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"Select a repository\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), repos.map(repo => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: repo.id,\n      children: repo.name\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(RepoSelector, \"MjoYu6hBopKic+0fWGhxckzxf9A=\");\n_c = RepoSelector;\nexport default RepoSelector;\nvar _c;\n$RefreshReg$(_c, \"RepoSelector\");","map":{"version":3,"names":["React","useEffect","useState","fetchRepos","jsxDEV","_jsxDEV","RepoSelector","onSelectRepo","_s","repos","setRepos","loadRepos","repoList","onChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","id","name","_c","$RefreshReg$"],"sources":["/Users/shubham/Downloads/DS-Repo-Sphere/frontend/src/components/RepoSelector.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchRepos } from \"../api\";\n\nconst RepoSelector = ({ onSelectRepo }) => {\n  const [repos, setRepos] = useState([]);\n\n  useEffect(() => {\n    const loadRepos = async () => {\n      const repoList = await fetchRepos();\n      setRepos(repoList);\n    };\n    loadRepos();\n  }, []);\n\n  return (\n    <select onChange={(e) => onSelectRepo(e.target.value)}>\n      <option value=\"\">Select a repository</option>\n      {repos.map((repo) => (\n        <option key={repo.id} value={repo.id}>\n          {repo.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default RepoSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMT,UAAU,CAAC,CAAC;MACnCO,QAAQ,CAACE,QAAQ,CAAC;IACpB,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAQQ,QAAQ,EAAGC,CAAC,IAAKP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAAC,QAAA,gBACpDZ,OAAA;MAAQW,KAAK,EAAC,EAAE;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CZ,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdlB,OAAA;MAAsBW,KAAK,EAAEO,IAAI,CAACC,EAAG;MAAAP,QAAA,EAClCM,IAAI,CAACE;IAAI,GADCF,IAAI,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACb,EAAA,CArBIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}