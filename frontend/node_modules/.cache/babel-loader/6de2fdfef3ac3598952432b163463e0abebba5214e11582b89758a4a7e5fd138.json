{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE = \"http://localhost:8000\";\nexport const fetchRepos = async () => {\n  const response = await axios.get(`${API_BASE}/github/repos`);\n  return response.data.repositories;\n};\nexport const fetchChatHistory = async repoId => {\n  const response = await axios.get(`${API_BASE}/chat/history?repo_id=${repoId}`);\n  return response.data.history;\n};\nexport const sendMessage = async (repoId, message) => {\n  const response = await axios.post(`${API_BASE}/chat/new`, {\n    repo_id: repoId,\n    message\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE","fetchRepos","response","get","data","repositories","fetchChatHistory","repoId","history","sendMessage","message","post","repo_id"],"sources":["/Users/shubham/Downloads/DS-Repo-Sphere/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE = \"http://localhost:8000\";\n\nexport const fetchRepos = async () => {\n  const response = await axios.get(`${API_BASE}/github/repos`);\n  return response.data.repositories;\n};\n\nexport const fetchChatHistory = async (repoId) => {\n  const response = await axios.get(`${API_BASE}/chat/history?repo_id=${repoId}`);\n  return response.data.history;\n};\n\nexport const sendMessage = async (repoId, message) => {\n  const response = await axios.post(`${API_BASE}/chat/new`, { repo_id: repoId, message });\n  return response.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,eAAe,CAAC;EAC5D,OAAOE,QAAQ,CAACE,IAAI,CAACC,YAAY;AACnC,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,yBAAyBO,MAAM,EAAE,CAAC;EAC9E,OAAOL,QAAQ,CAACE,IAAI,CAACI,OAAO;AAC9B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOF,MAAM,EAAEG,OAAO,KAAK;EACpD,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAC,GAAGX,QAAQ,WAAW,EAAE;IAAEY,OAAO,EAAEL,MAAM;IAAEG;EAAQ,CAAC,CAAC;EACvF,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}